openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: string
                is_done:
                  type: boolean
                user_id:
                  type: integer
                  format: uint
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/user/{user_id}:
    parameters:
      - name: user_id
        in: path
        required: true
        description: The id of the user to fetch tasks for
        schema:
          type: integer
          format: uint
    get:
      summary: Get all tasks for a specific user
      tags:
        - tasks
      responses:
        '200':
          description: A list of tasks for the specified user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: User not found
  /tasks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: The id of the task to update or delete
        schema:
          type: integer
          format: int64
    patch:
      summary: Update an existing task
      tags:
        - tasks
      requestBody:
        description: The updated task information
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: string
                is_done:
                  type: boolean
      responses:
        '200':
          description: The updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    delete:
      summary: Delete a task
      tags:
        - tasks
      responses:
        '204':
          description: Task successfully deleted
        '404':
          description: Task not found
  /users:
    get:
      summary: Get all users
      tags:
        - users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      tags:
        - users
      requestBody:
        description: The user to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: The id of the user to update or delete
        schema:
          type: integer
          format: int64
    patch:
      summary: Update an existing user
      tags:
        - users
      requestBody:
        description: The updated user information
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    delete:
      summary: Delete a user
      tags:
        - users
      responses:
        '204':
          description: User successfully deleted
        '404':
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
    Task:
      type: object
      properties:
        user_id:
          format: int64
          type: integer
        id:
          type: integer
          format: int64
        task:
          type: string
        is_done:
          type: boolean

